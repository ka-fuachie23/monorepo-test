name: monorepo test build deploy cd

on:
  push:
    branches:
      - "release_**"

jobs:
  check-changes:
    name: Check Package Changes
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install Yarn
        run: corepack enable

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Get release branches and compare
        id: get-changes
        run: |
          # Get the release branches
          LATEST_RELEASES=$(git branch -r | grep "origin/release_" | sed 's/origin\///' | sort -rV | head -n 2)
          
          # Convert to array
          readarray -t BRANCHES <<< "$LATEST_RELEASES"
          
          if [ ${#BRANCHES[@]} -eq 0 ]; then
            echo "::warning::No release branches found"
            exit 0
          fi
          
          LATEST_RELEASE=$(echo "${BRANCHES[0]}" | xargs)
          
          if [ ${#BRANCHES[@]} -eq 1 ]; then
            # If only one release branch exists, compare against main/master
            echo "Only one release branch found: $LATEST_RELEASE"
            DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | cut -d' ' -f5)
            yarn lerna ls --since origin/$DEFAULT_BRANCH
          else
            # If multiple release branches exist, compare against previous
            PREVIOUS_RELEASE=$(echo "${BRANCHES[1]}" | xargs)
            echo "Latest release: $LATEST_RELEASE"
            echo "Previous release: $PREVIOUS_RELEASE"
            yarn lerna ls --since "$PREVIOUS_RELEASE"
          fi
